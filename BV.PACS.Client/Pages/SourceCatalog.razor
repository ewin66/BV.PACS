@page "/SourceCatalog"
@using BV.PACS.Shared.Models
@using Microsoft.AspNetCore.Components
@inherits CatalogComponent
@inject HttpClient Http

<h1>Source Catalog</h1>

<p>This component demonstrates fetching source data from the server.</p>


@if (_sources == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div class="row">
        <div class="@SearchPanelCssClass">
            <SourceSearchPanel OnSearch=@OnSearchPanelSearch>

            </SourceSearchPanel>
        </div>

        <div class="@GridPanelCssClass">
            <div class="row">

                <div class="col-sm-12">
                    <button onclick="@ToggleSearchPanel" class="btn btn-info float-right">Show Search Panel</button>
                </div>
                <div class="col-sm-12">
                    <DxFormLayout CaptionPosition=@CaptionPosition.Vertical>
                        <DxFormLayoutItem ColSpanLg="12" ColSpanMd="12">
                            <Template>
                                <DxDataGrid Data=@_sources
                                            ShowFilterRow=@false
                                            ShowPager=@false
                                            AllowRowSelection=@false
                                            PageSize=@Condition.PageSize>
                                    <DxDataGridCommandColumn Width="150px"></DxDataGridCommandColumn>
                                    <DxDataGridColumn Field=@nameof(SourceListItem.SourceBarcode)></DxDataGridColumn>
                                    <DxDataGridColumn Field=@nameof(SourceListItem.SourceTemplateName) Caption="Template Name"></DxDataGridColumn>
                                    <DxDataGridDateEditColumn Field=@nameof(SourceListItem.SourceCreationDate)></DxDataGridDateEditColumn>
                                    <DxDataGridColumn Field=@nameof(SourceListItem.SourceType)></DxDataGridColumn>
                                </DxDataGrid>
                                @if (_pageCount > 1)
                                {
                                    <DxPager PageCount=@_pageCount
                                             bind-ActivePageIndex=@ActivePageNumber
                                             CollapseButtonCount=@CollapseButtonCount>
                                    </DxPager>
                                }
                            </Template>
                        </DxFormLayoutItem>
                    </DxFormLayout>
                </div>
            </div>
        </div>
    </div>
@functions {


    private SourceListItem[] _sources;
    protected int _pageCount;

    protected override async Task BeginGetPageCountAsync(AggregatedConditionDto cond)
    {
        _pageCount = await Http.PostJsonAsync<int>("api/Catalog/GetSourcesRecordCount", cond) / cond.PageSize;
    }

    protected override async Task BeginGetDataAsync(AggregatedConditionDto cond)
    {
        _sources = await Http.PostJsonAsync<SourceListItem[]>("api/Catalog/GetSources", cond);
    }

}}