@using BV.PACS.Client.Services.Api
@using BV.PACS.Shared.Models
@using BV.PACS.Shared.Models.Parameters
@using Microsoft.AspNetCore.Components
@inject HttpClient _http
@inject LookupService _apiService

<div class="row">


    @if (TrackingObject != null)
    {
    <DxFormLayout CaptionPosition="@CaptionPosition.Vertical">
        <DxFormLayoutItem Caption="@nameof(SourceTrackingDto.SourceBarcode)" ColSpanLg="6" ColSpanMd="12">
            <Template>
                <DxTextBox bind-Text="@SourceBarcode"></DxTextBox>
            </Template>
        </DxFormLayoutItem>

        <DxFormLayoutItem Caption="@nameof(SourceTrackingDto.SourceRegistrationDate)" ColSpanLg="6" ColSpanMd="12">
            <Template>
                <DxDateEdit bind-Date="@SourceRegistrationDate"></DxDateEdit>
            </Template>
        </DxFormLayoutItem>

        <DxFormLayoutItem Caption="@nameof(SourceTrackingDto.SourceType)" ColSpanLg="6" ColSpanMd="12">
            <Template>
                <DxTextBox bind-Text="@SourceType"></DxTextBox>
            </Template>
        </DxFormLayoutItem>
        @if (Templates != null)
        {
            <DxFormLayoutItem Caption="@nameof(SourceTrackingDto.SourceTemplateName)" ColSpanLg="6" ColSpanMd="12">
                <Template>

                    <DxComboBox Data="@Templates"
                                TextFieldName="Name"
                                NullText="Select Template ..."
                                bind-SelectedItem="@Template">
                    </DxComboBox>

                </Template>
            </DxFormLayoutItem>
        }
        <DxFormLayoutItem Caption="@nameof(SourceTrackingDto.SourceNote)" ColSpanLg="6" ColSpanMd="12">
            <Template>
                <DxTextBox bind-Text="@SourceNote"></DxTextBox>
            </Template>
        </DxFormLayoutItem>
        <DxFormLayoutItem Caption="@nameof(SourceTrackingDto.SourcePointOfOrigin)" ColSpanLg="6" ColSpanMd="12">
            <Template>
                <DxTextBox bind-Text="@SourcePointOfOrigin"></DxTextBox>
            </Template>
        </DxFormLayoutItem>

    </DxFormLayout>
    }



</div>

@functions {

    [Parameter]
    private int Id { get; set; }

    private string SourceBarcode
    {
        get => TrackingObject.SourceBarcode;
        set => TrackingObject.SourceBarcode = value;
    }

    private DateTime SourceRegistrationDate
    {
        get => TrackingObject.SourceRegistrationDate;
        set => TrackingObject.SourceRegistrationDate = value;
    }

    private string SourceType
    {
        get => TrackingObject.SourceType;
        set => TrackingObject.SourceType = value;
    }

    protected TemplateLookupItem[] Templates { get; set; }

    protected TemplateLookupItem Template
    {
        get { return Templates.FirstOrDefault(t => t.Id == TrackingObject.SourceTemplateId); }
        set
        {
            TrackingObject.SourceTemplateId = value.Id;
            TrackingObject.SourceTemplateName = value.Name;
        }
    }


    private string SourceNote
    {
        get => TrackingObject.SourceNote;
        set => TrackingObject.SourceNote = value;
    }

    private string SourcePointOfOrigin
    {
        get => TrackingObject.SourcePointOfOrigin;
        set => TrackingObject.SourcePointOfOrigin = value;
    }


    private SourceTrackingDto TrackingObject { get; set; }

    protected override async Task OnInitAsync()
    {
        await BeginGetDataAsync(new TrackingParameter(Id, BaseSettings.Language));
        await BeginGetLookupsAsync();
    }

    private async Task BeginGetLookupsAsync()
    {
        Templates = await _apiService.GetTemplatesLookup(_http, FormTypes.Source);
    }

    private async Task BeginGetDataAsync(TrackingParameter parameter)
    {
        var attr = typeof(SourceTrackingDto).GetCustomAttributes(typeof(DataUrlAttribute), false).FirstOrDefault();
        if (attr is DataUrlAttribute urlAttribute)
        {
            TrackingObject = await _http.PostJsonAsync<SourceTrackingDto>(urlAttribute.Url, parameter);
        }
    }

}