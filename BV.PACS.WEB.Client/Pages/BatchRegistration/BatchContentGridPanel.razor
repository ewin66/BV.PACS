@using BV.PACS.WEB.Shared.Models
@using BV.PACS.WEB.Client.Services.Api
@using BV.PACS.WEB.Client.Shared.Components
@inherits BV.PACS.WEB.Client.Materials.BatchContentGridPanelCode



@if (DataSource != null && DataSource.Count > 0)
{
    <DxFormLayout CaptionPosition="@CaptionPosition.Vertical">
        <DxFormLayoutItem ColSpanLg="12" ColSpanMd="12">
            <Template Context="GridContext">
                <DxDataGrid Data="@DataSource"
                            ShowFilterRow="@false"
                            ShowPager="@false"
                            AllowDataRowSelection="@true"
                            PageSize="@BaseSettings.MaxBatchRegistrationSize"
                            RowUpdating=@((updatingDataItem, newValues) => OnRowUpdating(updatingDataItem, newValues))>

                    <DxDataGridCommandColumn Width="150px"></DxDataGridCommandColumn>
                    <DxDataGridColumn Field="@nameof(BatchRegistrationDto.SourceBarcode)" Caption="@Translations.SourceBarcode">

                    </DxDataGridColumn>

                    <DxDataGridComboBoxColumn Data="@SourceTemplates" Field="@nameof(BatchRegistrationDto.SourceTemplate)" Caption="@Translations.SourceTemplate">                      
                    </DxDataGridComboBoxColumn>


                    <DxDataGridColumn Field="@nameof(BatchRegistrationDto.SourceTypeId)" Caption="@Translations.SourceType">
                        <DisplayTemplate>
                            @{
                                var dto = context as BatchRegistrationDto;
                               
                                <span>@dto?.SourceTypeId</span> <span>@dto?.SourceType</span>
                            }
                        </DisplayTemplate>

                        <EditTemplate>
                            @{ 
                                var cellEditContext = (CellEditContext)context; 
                                string sourceTypeId = (string)cellEditContext.CellValue;
                                SourceTypeSelectedItem = SourceTypes.FirstOrDefault(t => t.Id == sourceTypeId) ?? new SourceMaterialTypeLookupItem();
                               // var nestedItem = NestedDataSource.Where(x => x.ProductSubcategoryID == currentCellValue).FirstOrDefault();
                            }
                            <SourceMaterialTree Data="@SourceTypes"
                                                SelectedItem="@SourceTypeSelectedItem"
                                               
                                                >

                            </SourceMaterialTree>
                        </EditTemplate>

                    </DxDataGridColumn>

                    <DxDataGridColumn Field="@nameof(BatchRegistrationDto.MaterialBarcode)" Caption="@Translations.MaterialBarcode">
                    </DxDataGridColumn>

                    <DxDataGridComboBoxColumn Data="@MaterialTemplates" Field="@nameof(BatchRegistrationDto.MaterialTemplate)" Caption="@Translations.MaterialTemplate">
                    </DxDataGridComboBoxColumn>

                    <DxDataGridColumn Field="@nameof(BatchRegistrationDto.MaterialTypeId)" Caption="@Translations.MaterialType">
                    </DxDataGridColumn>

                    <DxDataGridColumn Field="@nameof(BatchRegistrationDto.AliquotBarcode)" Caption="@Translations.AliquotBarcode">
                    </DxDataGridColumn>

                    <DxDataGridComboBoxColumn Data="@AliquotTemplates" Field="@nameof(BatchRegistrationDto.AliquotTemplate)" Caption="@Translations.AliquotTemplate">
                    </DxDataGridComboBoxColumn>

                    <DxDataGridColumn Field="@nameof(BatchRegistrationDto.AliquotLocation)" Caption="@Translations.AliquotLocation">
                    </DxDataGridColumn>
                </DxDataGrid>

            </Template>
        </DxFormLayoutItem>
    </DxFormLayout>
}